{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","console","log","state","calculate","a","firstname","b","secondname","i","length","j","charAt","replace","ad","count","c2","w","k","slice","result","rtext","className","onSubmit","this","htmlFor","type","color","onChange","onClick","animationIn","animationOut","isVisible","href","icon","faFacebook","size","faInstagram","faGithub","faYoutube","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.413569b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {Animated} from \"react-animated-css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faInstagram,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      firstname :\"\",\n      secondname:\"\",\n      result:\"\",\n      rtext: null,\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n        [e.target.id] : e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(this.state)\n    this.calculate();\n  }\n  calculate = () => {\n    var a=this.state.firstname;\n    var b=this.state.secondname;\n    for (var i = 0; i < a.length; i++) { \n            for (var j = 0; j < b.length; j++){\n                if (a.charAt(i) === b.charAt(j)){\n                    a = a.replace(a.charAt(i), \"\");\n                    b = b.replace(b.charAt(j), \"\");\n                    i--;\n                    break;\n            }\n        }\n    }\n    var count = a.length + b.length ;\n    var c2 = count%6;\n    var w = \"FLAMES\";\n    for (var k=0; k < 5 ; k++ ){\n    c2 = count % (6-k);\n    w = w.slice(c2,) + w.slice(0,c2);\n    w = w.replace(w.charAt(w.length-1),\"\");\n    //alert(w);\n    //alert(\"two\");\n    }\n    //alert(w);\n    var ad;\n    if (w==='F') ad = \"You are Just Friends..\";\n    else if (w==='L') ad = \"OMG.. You're Lovers..!!\";\n    else if (w==='A') ad = \"Attraction\";\n    else if (w==='M') ad = \"May be you'll get Married..!!\";\n    else if (w==='E') ad = \"You're Enemies.. You hate each other..\";\n    else if (w==='S') ad = \"Your relation is Sister and Brother..\";\n    console.log(this.state.result)\n    this.setState({\n      result:w,\n      rtext:ad\n    })\n  }\n \n \n  render () {\n    return (\n        <div className=\"App container\" >\n          <br></br><br></br>\n          <h2>FLAMES</h2>\n        <form className=\"form-group\" onSubmit={this.handleSubmit}>\n        <br></br><br></br>\n          <label htmlFor=\"firstname\">Your Name</label>\n          <br></br>\n          <input type=\"text\" color=\"black\" value={this.state.firstname} id=\"firstname\" onChange={this.handleChange} ></input>\n          <br></br><br></br>\n          <label htmlFor=\"secondname\">Your Crush's Name</label>\n          <br></br>\n          <input type=\"text\"  id=\"secondname\" value={this.state.secondname} onChange={this.handleChange} ></input>\n          <br></br><br></br>\n          <button onClick={this.handleSubmit}>Go</button>\n        </form>\n        <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\" isVisible={true}>\n          <div>\n          <h2>{this.state.rtext}</h2>\n          </div>\n        </Animated>\n        <br></br><br></br><br></br>\n        <div className=\"container\">\n          <div className=\"row\">\n          <div className=\"col\"><a href=\"facebook.com/vinay.modepalli/\" className=\"facebook social\"><FontAwesomeIcon icon={faFacebook} size=\"2x\" /></a></div>\n          <div className=\"col\"><a href=\"https://www.instagram.com/iam__vinaykumar/\" className=\"instagram social\"><FontAwesomeIcon icon={faInstagram} size=\"2x\" /></a></div>\n          <div className=\"col\"><a href=\"https://github.com/VinayModepalli\" className=\"github social\"><FontAwesomeIcon icon={faGithub} size=\"2x\" /></a></div>\n          <div className=\"col\"><a href=\"https://www.youtube.com/channel/UCT-PxxuoCnyKeLv6DcLcCJg\" className=\"youtube social\"><FontAwesomeIcon icon={faYoutube} size=\"2x\" /></a></div>\n          \n          </div>\n        </div>\n        <br></br>\n        <h1><strong>Vinay Works</strong></h1>\n        </div>\n        \n\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}